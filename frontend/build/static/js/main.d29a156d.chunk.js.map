{"version":3,"sources":["../node_modules/express/lib sync","components/Header.js","components/Pagination.js","components/AnimeDetails.js","components/AnimeCard.js","components/Posts.js","components/Search.js","components/Homepage.js","components/MainContent.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Header","href","style","outline","color","padding","fontSize","Pagination","postsPerPage","totalPosts","paginate","prevPage","nextPage","pageNumbers","loading","i","Math","ceil","push","aria-label","className","onClick","map","num","AnimeDetails","anime","index","class","tabindex","aria-labelledby","aria-hidden","title","type","data-bs-dismiss","src","image_url","alt","episodes","score","synopsis","start_date","substring","airing","end_date","url","target","AnimeCard","data-bs-toggle","data-bs-target","Posts","animeList","ModalContent","mal_id","Search","HandleSearch","setSearch","search","onSubmit","placeholder","required","value","onChange","Homepage","topAnime","MainContent","props","loaded","show","setShow","App","axios","defaults","baseURL","useState","setAnimeList","setTopAnime","setLoaded","currentPage","setCurrentPage","fetchAnime","a","get","then","res","data","results","catch","err","console","log","indexOfLastPosts","indexOfFirstPost","currentPosts","slice","useEffect","top","preventDefault","length","pageNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d29a156d.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 280;","\r\nfunction Header() {\r\n    return (\r\n        <a href=\"/\" style={{\r\n            outline: \"0\",\r\n            color: \"black\",\r\n            \"text-decoration\": \"none\",\r\n            \"text-align\": \"center\",\r\n            padding: \"100px\",\r\n        }}>\r\n            <h1 style={{\r\n                fontSize: \"55px\"\r\n            }}><strong>Anime</strong>Database</h1>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate, prevPage, nextPage, loading }) => {\r\n\tconst pageNumbers = [];\r\n\t//the boolean expression evaluates to how many page numbers there are\r\n\tfor(let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n\t\tpageNumbers.push(i);\r\n\t}\r\n\treturn (\r\n\t\t<nav aria-label=\"Anime Navigation\">\r\n\t\t\t<ul className=\"pagination justify-content-center\">\r\n\t\t\t\t<li className=\"page-item\">\r\n\t\t\t\t\t<a className=\"page-link\" href=\"#\" onClick={() => prevPage()}>Previous</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t{pageNumbers.map(num => (\r\n\t\t\t\t\t<li className=\"page-item\" key={num}>\r\n\t\t\t\t\t\t<a onClick={() => paginate(num)} href=\"#\" className=\"page-link\">{num}</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t\t<li className=\"page-item\">\r\n\t\t\t\t\t<a className=\"page-link\" href=\"#\" onClick={() => nextPage()}>Next</a>\r\n            \t</li>\r\n\t\t\t</ul>\r\n\t  </nav>\r\n\t)\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react'\r\n\r\nconst AnimeDetails = ({ anime, index }) => {\r\n\treturn (\r\n\t\t<div class=\"modal fade bd-example-modal-lg\" id={`animedetails-${index}`} tabindex=\"-1\" aria-labelledby=\"Anime description\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog modal-lg modal-dialog-centered\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\" id=\"exampleModalLabel\">{anime.title}</h5>\r\n                            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" />\r\n                        </div>\r\n                        <div class=\"modal-body-inline-block \">\r\n                            <div className=\"modal-body row\">\r\n                                <figure className=\"modal-body col-xl-4\">\r\n                                    <img src={anime.image_url} className=\"modal-image\" alt={`${anime.title} Image`} />\r\n                                </figure>\r\n                                <figure className=\"modal-body col-xl-8\">\r\n\t\t\t\t\t\t\t\t\t<h3><strong>Type: </strong>{anime.type}</h3>\r\n                                    {anime.type === \"TV\" ?<h3><strong>Episodes: </strong>{anime.episodes}</h3>: null}\r\n                                    <h3><strong>Score: </strong>{anime.score}/10</h3>\r\n                                    <h3><strong>Synopsis: </strong>\r\n                                    {\r\n                                        anime.synopsis == null ? \"Click the link below for the synopsis.\" : anime.synopsis\r\n                                    }</h3>\r\n                                    <h3><strong>Start Date: </strong>{anime.start_date == null ? \"TBA\": anime.start_date.substring(0,10)}</h3>\r\n                                    <h3><strong>End Date: </strong>\r\n                                    {\r\n                                        anime.airing ? \"Still Airing\" : (anime.end_date == null ? \"TBA\": anime.end_date.substring(0,10))\r\n                                    }</h3>\r\n\t\t\t\t\t\t\t\t\t<h6><a href={anime.url} target=\"_blank\">Click here for more details.</a></h6>\r\n                                </figure>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\t)\r\n}\r\n\r\nexport default AnimeDetails\r\n","import { React, useState } from 'react';\r\nimport AnimeDetails from './AnimeDetails.js';\r\n\r\nconst AnimeCard = ({ anime, index}) => {\r\n\r\n    return (\r\n        <article className=\"anime-card\">\r\n            <button type=\"button\" className=\"modal-button\" data-bs-toggle=\"modal\" \r\n            data-bs-target={`#animedetails-${index}`} >\r\n                <figure className=\"figure-outer-block\">\r\n                    <img className=\"image-inner-block\" src={anime.image_url} alt=\"Anime Image\" />\r\n                </figure>\r\n                <h3 className=\"anime-card-title\">{anime.title}</h3>\r\n            </button>\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default AnimeCard;","import { React, useState } from 'react'\r\nimport AnimeCard from './AnimeCard.js'\r\nimport AnimeDetails from './AnimeDetails.js';\r\n\r\nconst Posts = ({ animeList }) => {\r\n\tconst ModalContent = () => {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{animeList.map(anime => (\r\n\t\t\t\t\t<AnimeDetails anime={anime} key={anime.mal_id} index={anime.mal_id} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"anime-list\">\r\n\t\t\t{animeList.map(anime => (\r\n\t\t\t\t<AnimeCard anime={anime} key={anime.mal_id} index={anime.mal_id}/>\r\n\t\t\t))}\r\n\t\t\t<ModalContent/>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n\r\nexport default Posts\r\n","import React from 'react'\r\n\r\nconst Search = ({ HandleSearch, setSearch, search }) => {\r\n\treturn (\r\n\t\t<div className=\"main-head\">\r\n\t\t\t<form\r\n\t\t\t\tclassName=\"search-box\"\r\n\t\t\t\tonSubmit={HandleSearch}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"search\"\r\n\t\t\t\t\tplaceholder=\"Search for an anime...\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tvalue={search}\r\n\t\t\t\t\tonChange={e => setSearch(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport Posts from './Posts.js';\r\n\r\nconst Homepage = ({ topAnime }) => {\r\n\treturn (\r\n\t\t<div className=\"homepage-cards\">\r\n\t\t\t<h1><strong>Top 10 Anime Series</strong></h1>\r\n\t\t\t<Posts animeList={topAnime}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default Homepage\r\n","import React from 'react'\r\nimport Pagination from './Pagination.js';\r\nimport Posts from './Posts.js';\r\nimport Search from './Search.js';\r\nimport Homepage from './Homepage.js';\r\nimport Navbar from './Navbar.js';\r\n\r\n\r\nconst MainContent = (props) => {\r\n    return (\r\n        <main className=\"main-page\">\r\n            <Search HandleSearch={props.HandleSearch} setSearch={props.setSearch} search={props.search} />\r\n            {/* If it is loading, then that means it is already called. Which means if the api calls it, then it'll only display the pagination when it's already loaded */}\r\n            \r\n            {props.loaded ?\r\n                <Posts animeList={props.animeList} show={props.show} setShow={props.setShow} />\r\n                :\r\n                <Homepage topAnime={props.topAnime} />}\r\n            {props.loaded ? <Pagination\r\n                postsPerPage={props.postsPerPage}\r\n                totalPosts={props.totalPosts}\r\n                paginate={props.paginate}\r\n                prevPage={props.prevPage}\r\n                nextPage={props.nextPage}\r\n            /> : null}\r\n        </main>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default MainContent\r\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport MainContent from './components/MainContent';\nimport AnimeDetails from './components/AnimeDetails';\nimport Search from './components/Search';\nimport Homepage from './components/Homepage';\n\nfunction App() {\n\taxios.defaults.baseURL = 'http://localhost:3000'; //this is to set the default so that the axios grabs data from that specific endpoint\n\t//used for the accessing of the animes\n\tconst [animeList, setAnimeList] = useState([]);\n\tconst [topAnime, setTopAnime] = useState([]);\n\tconst [search, setSearch] = useState(\"\");\n\tconst [animeData, setAnimeData] = useState([]);\n\t//primarily used for the pagination\n\tconst [loaded, setLoaded] = useState(false);\n\tconst [currentPage, setCurrentPage] = useState(1);\n\tconst [postsPerPage, setPostPerPage] = useState(10);\n\n\tconst getTopAnime = () => {\n\t\tconst tempAnime = axios.get(\"http://localhost:3000/getTopAnime\")\n\t\t\t.then(res => res.data) //gets the response from the call and returns the data to be used to set the top Anime's\n\t\t\t//this will grab the top elements of the top animes and sets it to the topAnime value\n\t\t\t.then(data => setTopAnime(data.top.slice(0, 10)))\n\t\t\t.catch(err => console.log(err)) //catches for errors\n\t}\n\n\tconst HandleSearch = e => {\n\t\t/*\n\t\t\tOn search,  \n\t\t*/\n\t\te.preventDefault();\n\t\tconsole.log(search)\n\t\tfetchAnime(search)\n\n\t}\n\n\tconst fetchAnime = async (anime) => {\n\t\tconst temp = axios.get(`/${anime}`) //creates a promise to get the data at /some-anime\n\t\t\t.then(res => res.data) //grabs the responses data\n\t\t\t.then(data => {\n\t\t\t\tsetLoaded(true);\n\t\t\t\tsetAnimeList(data.results)\n\n\t\t\t}) //grabs the results and saves it into the animeList variable\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\t// Get current Posts\n\tconst indexOfLastPosts = currentPage * postsPerPage;\n\tconst indexOfFirstPost = indexOfLastPosts - postsPerPage;\n\tconst currentPosts = animeList.slice(indexOfFirstPost, indexOfLastPosts);\n\n\t//pagination, to change the page of what you're on\n\tconst paginate = pageNumber => setCurrentPage(pageNumber)\n\n\tconst prevPage = () => {\n\t\tif (currentPage > 1) {\n\t\t\tsetCurrentPage(currentPage - 1);\n\t\t}\n\t};\n\tconst nextPage = () => {\n\t\tif (currentPage < Math.ceil(animeList.length / postsPerPage)) {\n\t\t\tsetCurrentPage(currentPage + 1);\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tgetTopAnime();\n\t}, []);\n\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header />\n\t\t\t<div className=\"content-wrap\">\n\t\t\t\t\t\n\t\t\t\t{/* <Sidebar topAnime={topAnime}/> */}\n\t\t\t\t<MainContent HandleSearch={HandleSearch}\n\t\t\t\t\tsearch={search}\n\t\t\t\t\tsetSearch={setSearch}\n\t\t\t\t\tpostsPerPage={postsPerPage}\n\t\t\t\t\ttotalPosts={animeList.length}\n\t\t\t\t\tpaginate={paginate}\n\t\t\t\t\tprevPage={prevPage}\n\t\t\t\t\tnextPage={nextPage}\n\t\t\t\t\tanimeList={currentPosts}\n\t\t\t\t\tloaded={loaded}\n\t\t\t\t\ttopAnime={topAnime}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/main.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}